@model IEnumerable<PhotoPortfolio.Models.Expense>
@using PhotoPortfolio.Models;
@using System.Linq;
@using System.Data.Entity;
@Styles.Render("~/Content/css")

@*<script src="@Url.Content("~/Scripts/jquery-2.2.0.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery-validate.unobtrusive.js")"></script>*@

<div class="row">
    <div class="col-sm-8 col-sm-offset-2">




    </div>
</div>

<div class="row" id="quarterlyRow">
    <div class="col-sm-8 col-sm-offset-2">

        <h1>Quarterly Expenses</h1>
    </div>
    <div id="Quarterly" class="col-sm-8 col-sm-offset-2">

    </div>
</div>

<div class="row" id="graphRow">
    <div class="col-sm-8 col-sm-offset-2">
        <h1>Daily Expenses</h1>
        <canvas id="myChart" width="980px" height="auto"></canvas>
    </div>
</div>

<div id="expenseDiv">
    <div id="Div2"></div>
</div>

<div class="panel row">
    <div class="col-sm-6 col-sm-offset-2">
        <div>
            <button class="btn btn-default" id="expense"><span class="glyphicon glyphicon-plus"></span> Add New Expense</button>
            <button class="btn btn-default" id="createBtn"><span class="glyphicon glyphicon-plus"></span> Add A Category</button>
        </div>
        <h1>Expense</h1>
        <table class="col-sm-12" cellpadding="10">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ExpenseCategory.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Payee)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Total)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Date)
                </th>
                <th></th>
            </tr>

            @foreach (var item in ViewBag.rows)
            {
                <tr>
                    <td>
                        @(item.ExpenseCategory.Name)
                    </td>
                    <td>
                        @(item.Payee)
                    </td>
                    <td>
                        @(item.Total)
                    </td>
                    <td>
                        @(item.Date.ToShortDateString())
                    </td>

                    @*<td>
                            @Html.DisplayFor(modelItem => item.Payee)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Total)
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Date.Day)
                        </td>*@
                    @*<td>
                            @Html.DisplayName(item.Date.ToShortDateString())
                        </td>*@
                </tr>
            }
        </table>
    </div>
    <br />



    @{

        double?[] result = ViewBag.totals;
        string test = "";

        for (int i = 0; i < result.Length; i++)
        {
            if (i == 0)
            {
                test = test + result[i].ToString();
            }
            else
            {
                test = test + "," + result[i].ToString();
            }
        }

        var Dates = ViewBag.dates;
        string dateString = "";
        foreach (var item in Dates)
        {
            if (dateString == "")
            {
                dateString = dateString + item.ToString("dd");
            }
            else
            {
                dateString = dateString + "," + item.ToString("dd");
            }
        }
    }
    <script>
        var result = "@test";
        var resultsArray = result.split(',');
        var somthing = "@dateString";
        var theThing = somthing.split(',');
        var context = $("#myChart").get(0).getContext("2d");
        var data = {
            labels: theThing,
            datasets: [{

                label: "My First dataset",
                fillColor: "rgba(39,242,242,0.5)",
                strokeColor: "rgba(220,220,220,0.8)",
                pointColor: "rgba(220,220,220,1)",
                pointStrokeColor: "#fff",
                pointHighlightFill: "rgba(255,0,39,0.75)",
                pointHighlightStroke: "rgba(220,220,220,1)",
                data: resultsArray
            }]
        }
        var options = {
            ///Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: false,
            //String - Colour of the grid lines
            scaleGridLineColor: "rgba(0,0,0,.05)",
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether the line is curved between points
            bezierCurve: true,
            //Number - Tension of the bezier curve between points
            bezierCurveTension: 0.4,
            //Boolean - Whether to show a dot for each point
            pointDot: true,
            //Number - Radius of each point dot in pixels
            pointDotRadius: 4,
            //Number - Pixel width of point dot stroke
            pointDotStrokeWidth: 1,
            //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
            pointHitDetectionRadius: 20,
            //Boolean - Whether to show a stroke for datasets
            datasetStroke: true,
            //Number - Pixel width of dataset stroke
            datasetStrokeWidth: 2,
            //Boolean - Whether to fill the dataset with a colour
            datasetFill: false,
        }
        var myLineChart = new Chart(context).Line(data, options)

        $(document).ready(function () {
            var expense = '@Url.Action("CreatePartial", "Expenses")';
            var createExp = '@Url.Action("CreatePartial", "ExpenseCategories")';
            $("#expense").click(function () {
                $('#expenseDiv').load(expense, { searchText: "" });
            })
            $("#createBtn").click(function () {
                {
                    $('#expenseDiv').load(createExp, { searchText: "" });
                }
            })
        });

        $(document).ready(function () {
            var revCat = '@Url.Action("PartialQuarterly", "Expenses")';
            $('#Quarterly').load(revCat);

        });

    </script>
